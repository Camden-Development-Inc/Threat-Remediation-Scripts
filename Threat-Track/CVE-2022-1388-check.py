###########################################################################
## A simple script to check exposed iControl REST API endpoint on BIG-IP ##
###########################################################################
# Script update: 05-09-2022 - frostb1te helped improve the existing script by scanning multiple devices.
# References
# https://threatpost.com/f5-critical-bugbig-ip-systems/179514/
# https://github.com/MrCl0wnLab/Nuclei-Template-CVE-2022-1388-BIG-IP-iControl-REST-Exposed
# https://support.f5.com/csp/article/K23605346
from requests import get
import sys
import warnings

warnings.filterwarnings('ignore', message='Unverified HTTPS request')

def checkVulnSingle(target):
    target = f"{target}/mgmt/shared/authn/login"
    res = get(target, verify=False)
    errorKeywords = ["resterrorresponse", "message"]
    check = 0
    if res.status_code == 401:
        check += 1
        for i in errorKeywords:
            if i in res.text:
                check += 1
            else:
                pass
        if check == 3:
            return f"[+] Found an exposed iControl REST API => {target}"
    else:
        return "[!] Something went wrong with the request. Or server is not vulnerable."

def checkVulnMulti(target):
    content = []
    with open(target) as f:
        content = f.readlines()
    for i in content:
        i = f"https://{i.strip()}/mgmt/shared/authn/login"
        try:
            res = get(i, verify=False)
            errorKeywords = ["resterrorresponse", "message"]
            check = 0
            if res.status_code == 401:
                check += 1
                for j in errorKeywords:
                    if j in res.text:
                        check += 1
                    else:
                        pass
                if check == 3:
                    print(f"[+] Found an exposed iControl REST API => {res.url}")
                    check = 0
        except Exception as x:
            continue

if __name__ == "__main__":
    target = sys.argv[1]
    if target.endswith(".txt"):
        checkVulnMulti(target)
    else:
        pass

    if target.endswith("/"):
        print("target url not formatted properly. Example: http://vulnerableserver")
        quit()
    else:
        pass

    if target.startswith("http") or target.startswith("https"):
        print(checkVulnSingle(target))
    else:
        pass

